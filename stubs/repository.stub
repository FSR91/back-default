<?php

namespace App\Infra\Eloquent;

use App\Models\{{ modelName }};
use App\Contracts\{{ modelName }}RepositoryContract;
use Illuminate\Pagination\LengthAwarePaginator;
use Illuminate\Support\Facades\DB;

class {{ modelName }}Repository implements {{ modelName }}RepositoryContract
{

    /** @inheritDoc */
    public function save({{ modelName }} ${{ modelInstance }}): {{ modelName }}
    {
        ${{ modelInstance }}->save();
        ${{ modelInstance }}->refresh();
        return ${{ modelInstance }};
    }

    /** @inheritDoc */
    public function index(array $filter, $sort, int $page = 1, int $perPage = 10): LengthAwarePaginator
    {
        return {{ modelName }}::filter($filter)
            ->sort($sort)
            ->paginate($perPage, ['*'], 'page', $page);
    }

    /** @inheritDoc */
    public function getOne(array $filter): ?{{ modelName }}
    {
        return {{ modelName }}::filter($filter)->first();
    }

    /** @inheritDoc */
    public function destroy({{ modelName }} ${{ modelInstance }}): bool
    {
        return ${{ modelInstance }}->delete();
    }

    /** @inheritDoc */
    public function summary(array $filter): array
    {
       return [];
    }
}
